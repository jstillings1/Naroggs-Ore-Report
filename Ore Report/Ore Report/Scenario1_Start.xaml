<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->

<Page x:Class="Ore_Report.Scenario1" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:Ore_Report" xmlns:common="using:Ore_Report.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
    <ScrollViewer VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
        <StackPanel>
            <TextBlock x:Name="InputTextBlock1" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" Margin="0,0,0,20">
        DatagramSocket can be used to create the 'server' side of a connection.
      It listens on a local 'service name' (often a port number) and triggers a
      MessageReceived event whenever a datagram reaches the port that it is
      bound to.
            </TextBlock>
            <TextBlock Style="{StaticResource BasicTextStyle}"> Service name:</TextBlock>
            <TextBox x:Name="ServiceNameForListener" Text="22112"/>
            <TextBlock Style="{StaticResource BasicTextStyle}">Optional settings:</TextBlock>
            <TextBlock Style="{StaticResource BasicTextStyle}">Inbound buffer size (bytes):</TextBlock>
            <TextBox x:Name="InboundBufferSize" Text="" InputScope="Number" />
            <RadioButton x:Name="BindToAny" Checked="BindToAny_Checked" Unchecked="BindToAny_Unchecked">Bind to any address</RadioButton>
            <RadioButton x:Name="BindToAddress">Bind to specific address (select from below list of IPv4 or IPv6)</RadioButton>
            <RadioButton x:Name="BindToAdapter">Bind to adapter (select an adapter based on the GUIDs below)</RadioButton>
            <ComboBox x:Name="AdapterList" AllowDrop="True" IsEnabled="False"/>
            <Button x:Name="StartListener" Content="Listen" Click="StartListener_Click"/>
            <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="DefaultLayout"/>
                    <VisualState x:Name="Below768Layout"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </StackPanel>
    </ScrollViewer>
</Page>